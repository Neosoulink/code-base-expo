{"version":3,"sources":["Object.es7.js"],"names":["hasOwnProperty","Object","prototype","entries","object","TypeError","key","call","push","values"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,CAAC,YAAW;AACV;;AAEA,QAAMA,cAAc,GAAGC,MAAM,CAACC,SAAP,CAAiBF,cAAxC;AAEA;AACF;AACA;AACA;;AACE,MAAI,OAAOC,MAAM,CAACE,OAAd,KAA0B,UAA9B,EAA0C;AACxCF,IAAAA,MAAM,CAACE,OAAP,GAAiB,UAASC,MAAT,EAAiB;AAChC;AACA,UAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB,cAAM,IAAIC,SAAJ,CAAc,qCAAd,CAAN;AACD;;AAED,YAAMF,OAAO,GAAG,EAAhB;;AACA,WAAK,MAAMG,GAAX,IAAkBF,MAAlB,EAA0B;AACxB,YAAIJ,cAAc,CAACO,IAAf,CAAoBH,MAApB,EAA4BE,GAA5B,CAAJ,EAAsC;AACpCH,UAAAA,OAAO,CAACK,IAAR,CAAa,CAACF,GAAD,EAAMF,MAAM,CAACE,GAAD,CAAZ,CAAb;AACD;AACF;;AACD,aAAOH,OAAP;AACD,KAbD;AAcD;AAED;AACF;AACA;AACA;;;AACE,MAAI,OAAOF,MAAM,CAACQ,MAAd,KAAyB,UAA7B,EAAyC;AACvCR,IAAAA,MAAM,CAACQ,MAAP,GAAgB,UAASL,MAAT,EAAiB;AAC/B;AACA,UAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB,cAAM,IAAIC,SAAJ,CAAc,oCAAd,CAAN;AACD;;AAED,YAAMI,MAAM,GAAG,EAAf;;AACA,WAAK,MAAMH,GAAX,IAAkBF,MAAlB,EAA0B;AACxB,YAAIJ,cAAc,CAACO,IAAf,CAAoBH,MAApB,EAA4BE,GAA5B,CAAJ,EAAsC;AACpCG,UAAAA,MAAM,CAACD,IAAP,CAAYJ,MAAM,CAACE,GAAD,CAAlB;AACD;AACF;;AACD,aAAOG,MAAP;AACD,KAbD;AAcD;AACF,CA9CD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @polyfill\n * @nolint\n */\n\n(function() {\n  'use strict';\n\n  const hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  /**\n   * Returns an array of the given object's own enumerable entries.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\n   */\n  if (typeof Object.entries !== 'function') {\n    Object.entries = function(object) {\n      // `null` and `undefined` values are not allowed.\n      if (object == null) {\n        throw new TypeError('Object.entries called on non-object');\n      }\n\n      const entries = [];\n      for (const key in object) {\n        if (hasOwnProperty.call(object, key)) {\n          entries.push([key, object[key]]);\n        }\n      }\n      return entries;\n    };\n  }\n\n  /**\n   * Returns an array of the given object's own enumerable entries.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n   */\n  if (typeof Object.values !== 'function') {\n    Object.values = function(object) {\n      // `null` and `undefined` values are not allowed.\n      if (object == null) {\n        throw new TypeError('Object.values called on non-object');\n      }\n\n      const values = [];\n      for (const key in object) {\n        if (hasOwnProperty.call(object, key)) {\n          values.push(object[key]);\n        }\n      }\n      return values;\n    };\n  }\n})();\n"]}